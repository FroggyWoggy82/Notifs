/**
 * Fix for ingredient refresh issues
 * 
 * This script fixes issues with ingredients not showing up in the UI after being added
 */

(function() {
    console.log('[Ingredient Refresh Fix] Initializing...');

    // Wait for the DOM to be fully loaded
    document.addEventListener('DOMContentLoaded', function() {
        console.log('[Ingredient Refresh Fix] DOM loaded, applying fixes');
        
        // Override the fetchAndDisplayIngredients function to ensure it properly refreshes
        const originalFetchAndDisplayIngredients = window.fetchAndDisplayIngredients;
        
        if (typeof originalFetchAndDisplayIngredients !== 'function') {
            console.error('[Ingredient Refresh Fix] Original fetchAndDisplayIngredients function not found');
            return;
        }
        
        // Replace the original function with our fixed version
        window.fetchAndDisplayIngredients = function(recipeId, detailsDiv, viewButton, forceRefresh = false) {
            console.log(`[Ingredient Refresh Fix] Called fetchAndDisplayIngredients with forceRefresh=${forceRefresh}`);
            
            // If forceRefresh is true, we need to ensure the details div is properly refreshed
            if (forceRefresh) {
                console.log('[Ingredient Refresh Fix] Force refresh detected, ensuring proper refresh');
                
                // Set a flag on the details div to indicate it should be refreshed
                if (detailsDiv) {
                    detailsDiv.dataset.forceRefresh = 'true';
                    
                    // Clear any existing content to ensure a fresh start
                    detailsDiv.innerHTML = '<p>Loading ingredients...</p>';
                    detailsDiv.style.display = 'block';
                }
            }
            
            // Call the original function with all arguments
            return originalFetchAndDisplayIngredients(recipeId, detailsDiv, viewButton, forceRefresh);
        };
        
        // Override the handleAddIngredientSubmit function to ensure it properly refreshes after adding an ingredient
        const originalHandleAddIngredientSubmit = window.handleAddIngredientSubmit;
        
        if (typeof originalHandleAddIngredientSubmit !== 'function') {
            console.error('[Ingredient Refresh Fix] Original handleAddIngredientSubmit function not found');
            return;
        }
        
        // Replace the original function with our fixed version
        window.handleAddIngredientSubmit = async function(event) {
            console.log('[Ingredient Refresh Fix] Called handleAddIngredientSubmit');
            
            // Call the original function
            const result = await originalHandleAddIngredientSubmit(event);
            
            // After the original function completes, ensure the ingredient list is refreshed
            console.log('[Ingredient Refresh Fix] handleAddIngredientSubmit completed, forcing refresh');
            
            // Get the recipe ID from the form
            const form = event.target;
            const recipeIdInput = form.querySelector('#add-ingredient-recipe-id');
            
            if (recipeIdInput && recipeIdInput.value) {
                const recipeId = recipeIdInput.value;
                console.log(`[Ingredient Refresh Fix] Found recipe ID: ${recipeId}, forcing refresh`);
                
                // Find the recipe card and details div
                const recipeCard = document.querySelector(`.recipe-card[data-id="${recipeId}"]`);
                
                if (recipeCard) {
                    const detailsDiv = recipeCard.querySelector('.ingredient-details');
                    
                    if (detailsDiv) {
                        // Force a complete refresh by closing and reopening the details
                        console.log('[Ingredient Refresh Fix] Found details div, forcing refresh');
                        
                        // Wait a moment to ensure the server has processed the new ingredient
                        setTimeout(() => {
                            // First hide the details
                            detailsDiv.style.display = 'none';
                            
                            // Then wait a moment and show them again with a fresh fetch
                            setTimeout(() => {
                                console.log('[Ingredient Refresh Fix] Performing forced refresh of ingredient details');
                                window.fetchAndDisplayIngredients(recipeId, detailsDiv, null, true);
                            }, 300);
                        }, 1000);
                    }
                }
            }
            
            return result;
        };
        
        console.log('[Ingredient Refresh Fix] Fixes applied successfully');
    });
})();
