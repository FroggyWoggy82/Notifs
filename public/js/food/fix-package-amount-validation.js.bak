/**
 * Fix Package Amount Validation
 * 
 * This script removes the strict validation on package amount fields
 * to allow a wider range of values.
 */

(function() {
    console.log('[Package Amount Validation Fix] Initializing...');
    
    // Function to fix package amount input fields
    function fixPackageAmountValidation() {
        // Find all package amount input fields
        const packageAmountInputs = document.querySelectorAll('.ingredient-package-amount, #edit-ingredient-package-amount, #add-ingredient-package-amount, [id*="package-amount"]');
        
        packageAmountInputs.forEach(input => {
            // Remove step attribute to allow any decimal value
            input.removeAttribute('step');
            
            // Set a very small step value to allow virtually any decimal
            input.setAttribute('step', '0.000001');
            
            // Remove any min/max constraints
            input.removeAttribute('min');
            input.removeAttribute('max');
            
            console.log(`[Package Amount Validation Fix] Fixed validation for: ${input.id || 'unnamed input'}`);
        });
    }
    
    // Run immediately
    fixPackageAmountValidation();
    
    // Set up a MutationObserver to watch for new package amount fields
    const observer = new MutationObserver(mutations => {
        mutations.forEach(mutation => {
            if (mutation.type === 'childList' && mutation.addedNodes.length > 0) {
                // Check if any of the added nodes contain package amount inputs
                mutation.addedNodes.forEach(node => {
                    if (node.nodeType === 1) { // Element node
                        // Check if the node itself is a package amount input
                        if (node.classList && 
                            (node.classList.contains('ingredient-package-amount') || 
                             node.id === 'edit-ingredient-package-amount' || 
                             node.id === 'add-ingredient-package-amount' ||
                             (node.id && node.id.includes('package-amount')))) {
                            // Remove step attribute to allow any decimal value
                            node.removeAttribute('step');
                            
                            // Set a very small step value to allow virtually any decimal
                            node.setAttribute('step', '0.000001');
                            
                            // Remove any min/max constraints
                            node.removeAttribute('min');
                            node.removeAttribute('max');
                            
                            console.log(`[Package Amount Validation Fix] Fixed validation for new input: ${node.id || 'unnamed input'}`);
                        }
                        
                        // Check if the node contains package amount inputs
                        const inputs = node.querySelectorAll('.ingredient-package-amount, #edit-ingredient-package-amount, #add-ingredient-package-amount, [id*="package-amount"]');
                        if (inputs.length > 0) {
                            inputs.forEach(input => {
                                // Remove step attribute to allow any decimal value
                                input.removeAttribute('step');
                                
                                // Set a very small step value to allow virtually any decimal
                                input.setAttribute('step', '0.000001');
                                
                                // Remove any min/max constraints
                                input.removeAttribute('min');
                                input.removeAttribute('max');
                                
                                console.log(`[Package Amount Validation Fix] Fixed validation for new input: ${input.id || 'unnamed input'}`);
                            });
                        }
                    }
                });
            }
        });
    });
    
    // Start observing the document with the configured parameters
    observer.observe(document.body, { childList: true, subtree: true });
    
    // Also run the fix when forms are displayed
    document.addEventListener('click', function(event) {
        // Check if the click was on an add or edit button
        if (event.target.classList.contains('add-ingredient-to-recipe-btn') || 
            event.target.classList.contains('edit-ingredient-btn')) {
            // Wait a short time for the form to be displayed
            setTimeout(fixPackageAmountValidation, 100);
        }
    });
    
    console.log('[Package Amount Validation Fix] Initialized');
})();
